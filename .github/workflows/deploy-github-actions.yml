name: Deploy to GitHub Pages (GitHub Actions)

on:
  push:
    branches: [ main ]
  workflow_dispatch: # 수동 실행 가능

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        echo "=== 의존성 설치 시작 ==="
        npm ci --prefer-offline --no-audit
        echo "=== 의존성 설치 완료 ==="
      
    - name: Lint check
      run: |
        echo "=== 린트 검사 시작 ==="
        npm run lint || echo "린트 오류 무시하고 계속 진행"
        echo "=== 린트 검사 완료 ==="
      
    - name: Build
      run: |
        echo "=== 빌드 시작 ==="
        echo "Repository: ${{ github.repository }}"
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "=== 빌드 실행 ==="
        npm run build
        echo "=== 빌드 완료 ==="
      env:
        NODE_ENV: production
        VITE_BASE_URL: /Portfolio/
      
    - name: Validate build output
      run: |
        echo "=== 빌드 결과물 검증 ==="
        if [ ! -f "dist/index.html" ]; then
          echo "❌ index.html 파일이 없습니다!"
          exit 1
        fi
        
        echo "✅ index.html 파일 확인됨"
        ls -la dist/
        echo "=== 파일 개수: $(find dist -type f | wc -l) ==="
        echo "=== dist 디렉토리 크기: $(du -sh dist/) ==="
        
        # index.html 내용 확인
        echo "=== index.html 첫 10줄 ==="
        head -10 dist/index.html
        
        # 빈 파일 확인
        echo "=== 빈 파일 확인 ==="
        find dist -type f -size 0 -ls || echo "빈 파일 없음"
        
        echo "=== 빌드 검증 완료 ==="
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        retention-days: 1

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' # main 브랜치에서만 배포
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Verify deployment
      run: |
        echo "=== 배포 완료 ==="
        echo "배포 URL: ${{ steps.deployment.outputs.page_url }}"
        echo "배포 시간: $(date)"